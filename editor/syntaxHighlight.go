package editor

import "nova/editor/variables"

var HLDB = []*NovaEditorSyntax{
	{
		filetype:  "c",
		filematch: []string{".c", ".h", "cpp", ".cc"},
		keywords: []string{
			"switch", "if", "while", "for", "break", "continue", "return",
			"else", "struct", "union", "typedef", "static", "enum", "class",
			"case",

			"int|", "long|", "double|", "float|", "char|", "unsigned|",
			"signed|", "void|",
		},
		scs:   "//",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "go",
		filematch: []string{".go"},
		keywords: []string{
			"break", "default", "func", "interface", "select", "case", "defer",
			"go", "map", "struct", "chan", "else", "goto", "package", "switch",
			"const", "fallthrough", "if", "range", "type", "continue", "for",
			"import", "return", "var",
			"Println", "Printf", "Sprintf", "Errorf", "Fprintf", "Fprintln",
			"New", "Error", "Fatal", "Fatalf", "Panic", "Panicf", "Func",
			"Make", "New", "Range", "Type", "Append", "Cap", "Close", "Complex",
			"panic", "recover", "real", "imag", "len", "cap", "copy", "delete",

			"append|", "bool|", "byte|", "cap|", "close|", "complex|",
			"complex64|", "complex128|", "error|", "uint16|", "copy|", "false|",
			"float32|", "float64|", "imag|", "int|", "int8|", "int16|",
			"uint32|", "int32|", "int64|", "iota|", "len|", "make|", "new|",
			"nil|", "panic|", "uint64|", "print|", "println|", "real|",
			"recover|", "rune|", "string|", "true|", "uint|", "uint8|",
			"uintptr|",
		},
		scs:   "//",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "js",
		filematch: []string{".js", ".ts"},
		keywords: []string{
			"yield", "let", "const", "var", "if", "else", "for", "while",
			"return", "function", "new", "delete", "switch", "case", "default",
			"break", "continue", "do", "in", "typeof", "instanceof", "try",
			"catch", "finally", "throw", "debugger", "with", "export", "import",
			"class", "extends", "super", "enum", "implements", "interface",
			"package", "private", "protected", "public", "static", "yield",
			"null", "true", "false", "log", "alert", "confirm",
			"NaN", "Infinity", "undefined",
			"string", "number", "boolean", "object", "array", "function",
			"symbol", "async", "await", "let", "static", "get", "set", "as",
			"from", "of", "with", "of", "do", "return", "break", "continue",
			"interface",
		},
		scs:   "//",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "sh",
		filematch: []string{".sh"},
		keywords: []string{
			"case", "do", "done", "elif", "else", "esac", "fi", "for", "if",
			"in", "then", "until", "while",

			"alias", "bg", "bind", "break", "cd", "command", "compgen",
			"complete", "continue", "declare", "dirs", "disown", "echo",
			"enable", "eval", "exec", "exit", "export", "false", "fc", "fg",
			"getopts", "hash", "help", "history", "jobs", "kill", "let",
			"local",
			"import", "return", "var",

			"append|", "bool|", "byte|", "cap|", "close|", "complex|",
			"complex64|", "complex128|", "error|", "uint16|", "copy|", "false|",
			"float32|", "float64|", "imag|", "int|", "int8|", "int16|",
			"uint32|", "int32|", "int64|", "iota|", "len|", "make|", "new|",
			"nil|", "panic|", "uint64|", "print|", "println|", "real|",
			"recover|", "rune|", "string|", "true|", "uint|", "uint8|",
			"uintptr|",
		},
		scs:   "//",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "py",
		filematch: []string{".py"},
		keywords: []string{
			"and", "as", "assert", "break", "class", "continue", "def",
			"del", "elif", "else", "except", "exec", "finally", "for",
			"from", "global", "if", "import", "in", "is", "lambda", "not",
			"or", "pass", "print", "raise", "return", "try", "while",
			"with", "yield",

			"True", "False", "None",

			"int|", "long|", "double|", "float|", "char|", "unsigned|",
			"signed|", "void|",
		},
		scs:   "#",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "rb",
		filematch: []string{".rb"},
		keywords: []string{
			"alias", "and", "begin", "break", "case", "class", "def",
			"defined?", "do", "else", "elsif", "end", "ensure", "false",
			"for", "if", "in", "module", "next", "nil", "not", "or", "redo",
			"rescue", "retry", "return", "self", "super", "then", "true",
			"undef", "unless", "until", "when", "while", "yield",

			"__FILE__", "__LINE__", "BEGIN", "END",

			"include", "extend", "raise", "attr_accessor", "attr_reader",
			"attr_writer", "autoload", "autoload?", "alias_method",
			"public", "private", "protected", "module_function", "include",
			"extend", "autoload", "autoload?", "alias_method", "public",
			"private", "protected", "module_function", "include", "extend",
			"autoload", "autoload?",
		},
		scs:   "#",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
	{
		filetype:  "php",
		filematch: []string{".php"},
		keywords: []string{
			"and", "as", "break", "case", "class", "const", "continue",
			"declare", "default", "do", "echo", "else", "elseif", "enddeclare",
			"endfor", "endforeach", "endif", "endswitch", "endwhile", "exit",
			"extends", "for", "foreach", "function", "global", "if", "include",
		},
		scs:   "//",
		mcs:   "/*",
		mce:   "*/",
		flags: variables.HL_HIGHLIGHT_NUMBERS | variables.HL_HIGHLIGHT_STRINGS,
	},
}
